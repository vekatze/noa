import {
  core.list {for-each},
  core.random {random-in-range-int},
  this.gen {Gen, gen},
}

inline either-gen<a, b>(g1: gen(a), g2: gen(b)): gen(either(a, b)) {
  let Gen(generate1, shrink1) = g1;
  let Gen(generate2, shrink2) = g2;
  Gen of {
    generate := {
      function (size) {
        let dice = random-in-range-int(0, 1);
        if eq-int(dice, 0) {
          Left(generate1(size))
        } else {
          Right(generate2(size))
        }
      }
    },
    shrink := {
      function (error-or-value) {
        match error-or-value {
        | Left(e) =>
          for-each(shrink1(e), exact Left)
        | Right(v) =>
          for-each(shrink2(v), exact Right)
        }
      }
    },
  }
}
