import {
  core.list {length, nth},
  core.random {random-in-range-int},
  this.gen {Gen, gen},
}

define one-of<a>(xs: &list(a), x: &a): gen(a) {
  Gen of {
    generate := {
      function (_) {
        let len = length(xs);
        let index = random-in-range-int(0, trunc-int-int32(sub-int(len, 1)));
        let elem-or-none = nth(xs, index);
        match elem-or-none {
        | Left(_) =>
          *x
        | Right(elem) =>
          elem
        }
      }
    },
    shrink := {
      function (_) {
        Nil
      }
    },
  }
}
