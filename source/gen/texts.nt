import {
  core.control {grow},
  core.list {map-N},
  core.random {random},
  core.text {join, pack, unpack},
  core.text.show,
  this.gen {Gen, gen},
  this.gen.lists {_shrink-list},
  this.gen.runes {_gen-rune, runes},
}

constant texts: gen(text) {
  Gen of {
    generate = {
      function (size) {
        let text-len = random(size) in
        let tmp =
          grow([], text-len, function (acc, _) {
            Cons(core.text.singleton(_gen-rune(size)), acc)
          })
        in
        join(tmp)
      }
    },
    shrink = {
      function (t: text) {
        pin t = t in
        let rune-seq = unpack(t) in
        pin rune-lists = _shrink-list(runes)(rune-seq) in
        let result = map-N(pack, rune-lists) in
        result
      }
    },
    viewer = core.text.show.as-show,
  }
}
