import {
  core.either.show,
  core.list {for-each},
  core.random {random-in-range},
  this.gen {Gen, gen},
}

inline eithers<a, b>(g1: gen(a), g2: gen(b)): gen(either(a, b)) {
  let Gen(generate1, shrink1, viewer1) = g1 in
  let Gen(generate2, shrink2, viewer2) = g2 in
  Gen of {
    generate = {
      function (size) {
        let dice = random-in-range(0, 1) in
        if eq-int(dice, 0) {
          Left(generate1(size))
        } else {
          Right(generate2(size))
        }
      }
    },
    shrink = {
      function (error-or-value) {
        match error-or-value {
        | Left(e) =>
          for-each(shrink1(e), exact Left)
        | Right(v) =>
          for-each(shrink2(v), exact Right)
        }
      }
    },
    viewer = core.either.show.as-show(viewer1, viewer2),
  }
}
