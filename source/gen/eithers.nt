import {
  core.either.show,
  core.random {random-in-range},
  this.gen {Gen, gen},
}

inline eithers<a, b>(g1: gen(a), g2: gen(b)): gen(either(a, b)) {
  Gen of {
    generate = {
      function (size) {
        let dice = random-in-range(0, 1) in
        if eq-int(dice, 0) {
          Left(g1::generate(size))
        } else {
          Right(g2::generate(size))
        }
      }
    },
    shrink = {
      function (error-or-value) {
        match error-or-value {
        | Left(e) =>
          map(exact Left, g1::shrink(e))
        | Right(v) =>
          map(exact Right, g2::shrink(v))
        }
      }
    },
    viewer = core.either.show.as-show(g1::viewer, g2::viewer),
  }
}
