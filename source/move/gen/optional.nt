import {
  core.either.show {as-show},
  core.random {random-in-range-int},
  core.unit.show,
  this.rule.gen {Gen, gen},
}

define optional<a>(!g: gen(a)): gen(?a) {
  Gen of {
    generate := {
      function (size) {
        let dice = random-in-range-int(0, 1);
        if eq-int(dice, 0) {
          none
        } else {
          let Gen of {generate} = !g;
          Right(generate(size))
        }
      }
    },
    shrink := {
      function (_) {
        Nil
      }
    },
    viewer := {
      let Gen of {viewer} = !g;
      as-show(core.unit.show.as-show, viewer)
    },
  }
}
