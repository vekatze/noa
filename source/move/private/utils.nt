import {
  ansi.move.flush {flush},
  ansi.move.write {write, write-code},
  ansi.rule.color {Color-16},
  ansi.rule.color-ansi {Blue, Green, Red},
  ansi.rule.color-intensity {Vivid},
  ansi.rule.color-layer {Foreground},
  ansi.rule.command {Set-Style},
  ansi.rule.style {Bold, Color, Normal},
  this.rule.noa-kit {_Noa-Kit, noa-kit},
}

define _print-blue-bold(k: &noa-kit, t: &text): unit {
  tie _Noa-Kit of {ansi-kit} = k;
  let _ = {
    try _ = write-code(ansi-kit, Set-Style(Color(Foreground, Color-16(Vivid, Blue))));
    try _ = write-code(ansi-kit, Set-Style(Bold));
    try _ = write(ansi-kit, t);
    write-code(ansi-kit, Set-Style(Normal))
  };
  Unit
}

define _print-red-bold(k: &noa-kit, t: &text): unit {
  tie _Noa-Kit of {ansi-kit} = k;
  let _ = {
    try _ = write-code(ansi-kit, Set-Style(Color(Foreground, Color-16(Vivid, Red))));
    try _ = write-code(ansi-kit, Set-Style(Bold));
    try _ = write(ansi-kit, t);
    write-code(ansi-kit, Set-Style(Normal))
  };
  Unit
}

define _print-green-bold(k: &noa-kit, t: &text): unit {
  tie _Noa-Kit of {ansi-kit} = k;
  let _ = {
    try _ = write-code(ansi-kit, Set-Style(Color(Foreground, Color-16(Vivid, Green))));
    try _ = write-code(ansi-kit, Set-Style(Bold));
    try _ = write(ansi-kit, t);
    write-code(ansi-kit, Set-Style(Normal))
  };
  Unit
}

define _write(k: &noa-kit, t: &text): unit {
  let _ = {
    tie _Noa-Kit of {ansi-kit} = k;
    write(ansi-kit, t)
  };
  Unit
}

define _write-line(k: &noa-kit, t: &text): unit {
  tie _Noa-Kit of {ansi-kit} = k;
  let _ = {
    try _ = write(ansi-kit, t);
    write(ansi-kit, "\n")
  };
  Unit
}

define _flush(k: &noa-kit): unit {
  tie _Noa-Kit of {ansi-kit} = k;
  let _ = flush(ansi-kit);
  Unit
}
